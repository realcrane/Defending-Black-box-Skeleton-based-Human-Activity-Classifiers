conda activate py38tf2
CUDA_VISIBLE_DEVICES=0,1
cd remote/scshwa/projects/AdversarialTraining/code/
rm ./minLossModel_adtrained_* ./minValLossModel_adtrained_clf* ./minValLossModel_adtrained_-* ./minValLossModel_adtrained_0*rm ./minLossModel_adtrained_* ./minValLossModel_adtrained_clf* ./minValLossModel_adtrained_-* ./minValLossModel_adtrained_0*


############hdm05
########train&test classifiers on hdm05
python main.py -classifier 3layerMLP --routine train --dataset hdm05 --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65
python main.py -classifier STGCN --routine train --dataset hdm05 --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth
python main0806.py -classifier SGN --routine train --dataset hdm05 --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 65

python main.py -classifier 3layerMLP --routine test --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main.py -classifier STGCN --routine test --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main0806.py -classifier SGN --routine test --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/sgn -retPath ../results/ -cn 65

python main.py -classifier 3layerMLP --routine gatherCorrectPrediction --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main.py -classifier STGCN --routine gatherCorrectPrediction --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main0806.py -classifier SGN --routine gatherCorrectPrediction --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/sgn -retPath ../results/ -cn 65

###ML-adversarial train&test models on hdm05 using EBMATrainer
python main.py -classifier 3layerMLP --routine adTrain --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65
python main.py -classifier 3layerMLP --routine test --dataset hdm05 -adTrainer EBMATrainer --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main.py -classifier 3layerMLP --routine gatherCorrectPrediction -adTrainer EBMATrainer --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 65 -adTrainFile adClassTrain_adtrained.npz

python main.py -classifier STGCN --routine adTrain --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65
python main.py -classifier STGCN --routine test --dataset hdm05 -adTrainer EBMATrainer --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 65
python main.py -classifier STGCN --routine gatherCorrectPrediction -adTrainer EBMATrainer --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 65 -adTrainFile adClassTrain_adtrained.npz


###PT-bayesian adversarial train&test models on hdm05 using EBMATrainer
python main.py -classifier ExtendedBayesian --baseClassifier STGCN --routine bayesianTrain --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth
python main.py -classifier ExtendedBayesian --baseClassifier STGCN  --routine bayesianTest --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main.py -classifier ExtendedBayesian --baseClassifier STGCN  --routine gatherCorrectPrediction --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN --routine bayesianTrain --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 100 -cn 65 --trainedModelFile minValLossModel.pth -bs 128 --xWeight 0.001
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN  --routine bayesianTest --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth -bs 16
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN  --routine gatherCorrectPrediction --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN  --routine gatherCorrectPrediction --dataset hdm05 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 65 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minLossAppendedModel_adtrained.pth
###attack models on hdm05 using SMART
##attack the normally trained
python main.py --routine attack --attackType ab --dataset hdm05 -classifier 3layerMLP --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main.py --routine attack --attackType ab --dataset hdm05 -classifier STGCN --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main0806.py --routine attack --attackType ab --dataset hdm05 -classifier SGN --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65


##attack the ML-adversarial trained
python main.py --routine attack --attackType ab --dataset hdm05 -classifier 3layerMLP -adTrainer EBMATrainer --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel_adtrained.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main.py --routine attack --attackType ab --dataset hdm05 -classifier STGCN -adTrainer EBMATrainer --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel_adtrained.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main0806.py --routine attack --attackType ab --dataset hdm05 -classifier SGN -adTrainer EBMATrainer --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel_adtrained.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 65
##attack the PT-Bayesian-adversarial trained
python main.py --routine attack --attackType ab --dataset hdm05 -classifier ExtendedBayesian --baseClassifier STGCN -adTrainer EBMATrainer --epochs 1000 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth --trainFile bayesianAdClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main.py --routine attack --attackType ab --dataset hdm05 -classifier ExtendedBayesian --baseClassifier SGN -adTrainer EBMATrainer --epochs 1000 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth --trainFile bayesianAdClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65 -bs 16
###attack models on hdm05 using CIASA
##attack the normally trained
python main.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier 3layerMLP --epochs 1000 --batchSize 32 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier STGCN --epochs 1000 --batchSize 2 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main0806.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier SGN --epochs 1000 --batchSize 64 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65

##attack the ML-adversarial trained
python main.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier 3layerMLP -adTrainer EBMATrainer --epochs 1000 --batchSize 32 --trainedModelFile minValLossModel_adtrained.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 65
python main.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier STGCN -adTrainer EBMATrainer --epochs 1000 --batchSize 32 --trainedModelFile minValLossModel_adtrained.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 65

##attack the PT-Bayesian-adversarial trained
python main.py --routine attack -attacker CIASA --attackType ab --dataset hdm05 -classifier ExtendedBayesian --baseClassifier STGCN -adTrainer EBMATrainer --epochs 1000 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth --trainFile bayesianAdClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 65


############NTU60
########train&test classifiers on ntu60
python main.py -classifier STGCN --routine train --dataset ntu60 --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 80 -cn 60 -bs 128 -lr 0.2
python main.py -classifier STGCN --routine test --dataset ntu60 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 60 -bs 128
python main.py -classifier STGCN --routine gatherCorrectPrediction --dataset ntu60 --testFile classTest.npz --trainedModelFile minValLossModel.pth --dataPath ../data/ -retPath ../results/ -cn 60
python main0806.py -classifier SGN --routine train --dataset ntu60 --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 120 -cn 60 -bs 64 -lr 1e-3

###attack models on ntu using SMART
##attack the normally trained
python main.py --routine attack --attackType ab --dataset ntu60 -classifier STGCN --epochs 500 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 60

###attack models on ntu using CIASA
python main.py --routine attack -attacker CIASA --attackType ab --dataset ntu60 -classifier STGCN --epochs 500 --trainedModelFile minValLossModel.pth --trainFile adClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 60

###ML-adversarial train&test models on ntu60 using EBMATrainer
python main0806.py -classifier STGCN --routine adTrain --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth -bs 64
python main.py -classifier STGCN --routine test --dataset ntu60 -adTrainer EBMATrainer --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 60
python main.py -classifier STGCN --routine gatherCorrectPrediction -adTrainer EBMATrainer --dataset hdm05 --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/ -retPath ../results/ -cn 60 -adTrainFile adClassTrain_adtrained.npz
python main0806.py -classifier SGN --routine adTrain --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth -bs 256
python main0806.py -classifier SGN --routine test --dataset ntu60 -adTrainer EBMATrainer --testFile classTest.npz --trainedModelFile minValLossModel_adtrained_clfloss.pth --dataPath ../data/sgn/ -retPath ../results/ -cn 60 -bs 16
python main0806.py -classifier SGN --routine gatherCorrectPrediction -adTrainer EBMATrainer --dataset ntu60 --testFile classTest.npz --trainedModelFile minValLossModel_adtrained.pth --dataPath ../data/sgn/ -retPath ../results/ -cn 60 -adTrainFile adClassTrain_adtrained.npz


###PT-bayesian adversarial train&test models on ntu using EBMATrainer
python main.py -classifier ExtendedBayesian --baseClassifier STGCN --routine bayesianTrain --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth -bs 128
python main.py -classifier ExtendedBayesian --baseClassifier STGCN  --routine bayesianTest --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main.py -classifier ExtendedBayesian --baseClassifier STGCN  --routine gatherCorrectPrediction --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN  --routine gatherCorrectPrediction --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
python main0806.py -classifier ExtendedBayesian --baseClassifier SGN --routine bayesianTrain --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/sgn/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth -bs 256
python main.py -classifier ExtendedBayesian --baseClassifier SGN  --routine bayesianTest --dataset ntu60 -adTrainer EBMATrainer --trainFile classTrain.npz --testFile classTest.npz --dataPath ../data/ --retPath ../results/ -ep 200 -cn 60 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth
##attack the ML-adversarial trained NTU
python main0806.py --routine attack -attacker SMART --attackType ab --dataset ntu60 -classifier SGN -adTrainer EBMATrainer --epochs 500 --batchSize 512 --trainedModelFile minValLossModel_adtrained_clfloss.pth --trainFile adClassTrain_adtrained.npz --dataPath ../results/ -retPath ../results/ -cn 60

##attack the PT-Bayesian-adversarial trained NTU
python main.py --routine attack -attacker SMART --attackType ab --dataset ntu60 -classifier ExtendedBayesian --baseClassifier SGN -adTrainer EBMATrainer --epochs 500 --trainedModelFile minValLossModel.pth --trainedAppendedModelFile minValLossAppendedModel_adtrained.pth --trainFile bayesianAdClassTrain.npz --dataPath ../results/ -retPath ../results/ -cn 60 -bs 16